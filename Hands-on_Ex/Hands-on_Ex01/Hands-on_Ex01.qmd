---
title: "Hands-on Exercise 1: Geospatial Data Wrangling"
execute:
  warning: false
---

1.3 Getting Started

Installing and loading R packages

```{r}
pacman::p_load(sf, tidyverse)
```

1.4.1 Importing Geospatial Data

```{r}
mpsz <- st_read(dsn = "data/geospatial", layer = "MP14_SUBZONE_WEB_PL")
```

1.4.2 Importing polyline feature data in shapefile

```{r}
cyclingpath = st_read(dsn = "data/geospatial", layer = "CyclingPathGazette")
```

1.4.3 Importing GIS data in kml format

```{r}
preschool = st_read("data/geospatial/preschools-location.kml")
```

1.5 Checking the content of a simple feature dataframe

1.5.1 Working with st_geometry() The function will give you basic information of the feature class.

```{r}
st_geometry(mpsz)
```

1.5.2 Working with glimpse() glimpse showcases the rows and column and their respective data types and values

```{r}
glimpse(mpsz)
```

1.5.3 Working with head() Function shows the first n values

```{r}
head(mpsz, n = 5)
```

1.6 Plotting Geospatial Data

```{r}
plot(mpsz)
```

Choose to plot only the geometry

```{r}
plot(st_geometry(mpsz))
```

Choose to plot a specific attribute

```{r}
plot(mpsz["PLN_AREA_N"])
```

1.7 Working with Projection

1.7.1 Assigning EPSG code to a simple feature data frame

```{r}
st_crs(mpsz)
```

EPSG is 9001 which is wrong as it should be 3414. Therefore we need to set EPSG to 3414

```{r}
mpsz3414 <- st_set_crs(mpsz, 3414)
```

Check CSR again

```{r}
st_crs(mpsz3414)
```

1.7.2 Transforming the projection of preschool from wgs84 to svy21

```{r}
st_geometry(preschool)
```

Changge Geodetic CRS: WGS 84 to svy21_EPSG 3414

```{r}
preschool3414 <- st_transform(preschool, crs = 3414)
preschool3414
```

1.8 Importing and Converting an Aspatial data

```{r}
listings <- read_csv("data/aspatial/listings.csv")

#Imports into a tibble data frame
list(listings)
```

1.8.2 Creating a simple feature data frame from an aspatial data frame

```{r}
listings_sf <- st_as_sf(listings, coords = c("longitude", "latitude"), crs = 4326) |>
  st_transform(crs = 3414)

glimpse(listings_sf)
```

1.9 Geoprocessing with sf package

1.9.1 Buffering Scenario: The authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the current cycling path. You are tasked to determine the extend of the land need to be acquired and their total area.

Solution:

Firstly, st_buffer() is used to compute the 5 meter buffers around cycling paths

```{r}
buffer_cycling <- st_buffer(cyclingpath, dist = 5, nQuadSegs = 30) 
```

Then calculate the area of buffers

```{r}
buffer_cycling$AREA <- st_area(buffer_cycling)
```

Lastly sum() is used to rerive total land involved

```{r}
sum(buffer_cycling$AREA)
```

1.9.2 Point-in-polygon count Scenario: A pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.

Solution: Firstly, identify pre-schools located inside each Planning Subzone by using st_intersects(). Next, length() of Base R is used to calculate numbers of pre-schools that fall inside each planning subzone.

```{r}
mpsz3414$`PreSch Count` <- lengths(st_intersects(mpsz3414, preschool3414)) 
```

Show the summary statistics

```{r}
summary(mpsz3414$`PreSch Count`)
```

Show the planning subzone with the most number of school

```{r}
top_n(mpsz3414, 1, `PreSch Count`)
```

Find the density

```{r}
mpsz3414$Area <- mpsz3414 |>
  st_area()

mpsz3414 <- mpsz3414 |>
  mutate(`PreSch Density` = `PreSch Count`/Area *1000000)

mpsz3414
```

1.10 Exploratory Data Analysis

Create a histogram

```{r}
hist(mpsz3414$`PreSch Density`)
```

Using ggplot2

```{r}
mpsz3414 |>
  ggplot(aes(x = as.numeric(`PreSch Density`))) + 
  geom_histogram(bins=20,color="black",fill = "light blue") +
  labs(title = "Are pre-school even distributed in Singapore",
       subtitle = "There are many planning sub-zones with a single pre-school, on the other hand, \nthere are two planning sub-zones with at least 20 pre-schools", 
       x = "Pre-school density (per km sq)",
       y = "Frequency")
```

Using ggplot for scatterplot

```{r}
mpsz3414 |>
  ggplot(aes(x = as.numeric(`PreSch Density`), y = `PreSch Count`)) + 
  geom_point(color="black",fill = "light blue") +
  xlim(0,40) +
  ylim(0,40) +
  labs(title = "",
       x = "Pre-school density (per km sq)",
       y = "Frequency")
```
